{"ast":null,"code":"var _jsxFileName = \"/mnt/c/wamp64/www/REACT/analytics/P9-front-end-dashboard/front/src/components/graph/barChart/ActivityGraph.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { getDataWeightById } from \"../../../services/API/user\"; // css \n\nimport style from './activityGraph.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CustomTooltip = _ref => {\n  let {\n    active,\n    payload\n  } = _ref;\n\n  if (active && payload && payload.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.customTooltip,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: style.kilogram,\n        children: `${payload[0].value}kg`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: style.calories,\n        children: `${payload[1].value}Kcal`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this);\n  }\n\n  return null;\n};\n\n_c = CustomTooltip;\n\nconst renderLegend = (value, entry) => {\n  const {\n    color\n  } = entry;\n\n  if (value === \"Poids (kg)\") {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: style.kiloLegend,\n      style: {\n        color\n      },\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: style.caloLegend,\n    style: {\n      color\n    },\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 12\n  }, this);\n};\n\nexport const ActivityGraph = _ref2 => {\n  _s();\n\n  let {\n    id\n  } = _ref2;\n  const [data, setData] = useState();\n  useEffect(() => {\n    if (id) {\n      getDataWeightById(id).then(result => {\n        setData(result.data);\n      }).catch(() => console.error('APPEL API ERROR'));\n    }\n  }, [id]);\n\n  if (data) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.containerGraph,\n        children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: \"100%\",\n          children: /*#__PURE__*/_jsxDEV(BarChart, {\n            data: data.sessions,\n            margin: {\n              top: 5,\n              right: 30,\n              left: 20,\n              bottom: 5\n            },\n            barSize: 7,\n            barCategoryGap: 26,\n            barGap: 8,\n            children: [/*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"day\",\n              tickLine: false,\n              tickMargin: 16,\n              axisLine: false,\n              scale: \"auto\",\n              label: \"dede\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n              yAxisId: 0,\n              dataKey: \"kilogram\",\n              tickCount: 3,\n              tickLine: false,\n              axisLine: false,\n              orientation: \"right\",\n              tickMargin: 45,\n              type: \"number\",\n              domain: ['dataMin-1', 'dataMax + 2']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n              yAxisId: 1,\n              dataKey: \"calories\",\n              type: \"number\",\n              domain: [0, 'dataMax'],\n              hide: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n              content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 42\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Legend, {\n              className: style.legend,\n              align: \"right\",\n              verticalAlign: \"top\",\n              iconSize: 8,\n              iconType: \"circle\",\n              wrapperStyle: {\n                top: '-48px'\n              },\n              formatter: renderLegend\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\",\n              vertical: false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              yAxisId: 0,\n              name: \"Poids (kg)\",\n              dataKey: \"kilogram\",\n              fill: \"#282D30\",\n              radius: [3, 3, 0, 0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              yAxisId: 1,\n              name: \"Calories br\\xFBl\\xE9es (kCal)\",\n              dataKey: \"calories\",\n              fill: \"#E60000\",\n              radius: [3, 3, 0, 0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ERROR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n};\n\n_s(ActivityGraph, \"WZ2PO9A64oHRexE1CE+yX3ebuoA=\");\n\n_c2 = ActivityGraph;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CustomTooltip\");\n$RefreshReg$(_c2, \"ActivityGraph\");","map":{"version":3,"names":["React","useEffect","useState","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","getDataWeightById","style","CustomTooltip","active","payload","length","customTooltip","kilogram","value","calories","renderLegend","entry","color","kiloLegend","caloLegend","ActivityGraph","id","data","setData","then","result","catch","console","error","containerGraph","sessions","top","right","left","bottom","legend"],"sources":["/mnt/c/wamp64/www/REACT/analytics/P9-front-end-dashboard/front/src/components/graph/barChart/ActivityGraph.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, Label } from 'recharts';\r\nimport { getDataWeightById } from \"../../../services/API/user\";\r\n\r\n// css \r\nimport style from './activityGraph.module.css';\r\n\r\ninterface Props {\r\n    id: string,\r\n}\r\n\r\nconst CustomTooltip = ({ active, payload }: any) => {\r\n    if (active && payload && payload.length) {\r\n        return (\r\n            <div className={style.customTooltip}>\r\n                <p className={style.kilogram}>{`${payload[0].value}kg`}</p>\r\n                <p className={style.calories}>{`${payload[1].value}Kcal`}</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return null;\r\n};\r\n\r\nconst renderLegend = (value: string, entry: any) => {\r\n    const { color } = entry;\r\n\r\n    if (value === \"Poids (kg)\") {\r\n        return <span className={style.kiloLegend} style={{ color }}>{value}</span>\r\n    }\r\n    return <span className={style.caloLegend} style={{ color }}>{value}</span>;\r\n};\r\n\r\nexport const ActivityGraph: React.FC<Props> = ({ id }) => {\r\n    const [data, setData] = useState<IUserActivity>();\r\n    useEffect(() => {\r\n        if (id) {\r\n            getDataWeightById(id).then((result) => {\r\n                setData(result.data);\r\n            }).catch(() => console.error('APPEL API ERROR'));\r\n        }\r\n    }, [id])\r\n    if (data) {\r\n        return (\r\n            <>\r\n                <div className={style.containerGraph}>\r\n                    <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                        <BarChart\r\n                            data={data.sessions}\r\n                            margin={{\r\n                                top: 5,\r\n                                right: 30,\r\n                                left: 20,\r\n                                bottom: 5,\r\n                            }}\r\n                            barSize={7}\r\n                            barCategoryGap={26}\r\n                            barGap={8}\r\n\r\n                        >\r\n                            <XAxis\r\n                                dataKey=\"day\"\r\n                                tickLine={false}\r\n                                tickMargin={16}\r\n                                axisLine={false}\r\n                                scale=\"auto\"\r\n                                label=\"dede\"\r\n                                \r\n                            />\r\n                            <YAxis\r\n                            yAxisId={0}\r\n                                dataKey=\"kilogram\"\r\n                                tickCount={3}\r\n                                tickLine={false}\r\n                                axisLine={false}\r\n                                orientation=\"right\"\r\n                                tickMargin={45}\r\n                                type=\"number\" \r\n                                domain={['dataMin-1', 'dataMax + 2']}\r\n                            />\r\n                            <YAxis\r\n                            yAxisId={1}\r\n                                dataKey=\"calories\"\r\n                                type=\"number\" \r\n                                domain={[0, 'dataMax']}\r\n                                hide={true}\r\n                            />\r\n                            <Tooltip\r\n                                content={<CustomTooltip />}\r\n                            />\r\n                            <Legend\r\n                                className={style.legend}\r\n                                align=\"right\"\r\n                                verticalAlign=\"top\"\r\n                                iconSize={8}\r\n                                iconType=\"circle\"\r\n                                wrapperStyle={{\r\n                                    top: '-48px'\r\n                                }}\r\n                                formatter={renderLegend}\r\n\r\n                            />\r\n                            <CartesianGrid\r\n                                strokeDasharray=\"3 3\"\r\n                                vertical={false}\r\n                            />\r\n                            <Bar yAxisId={0} name=\"Poids (kg)\" dataKey=\"kilogram\" fill=\"#282D30\" radius={[3,3,0,0]} />\r\n                            <Bar yAxisId={1} name=\"Calories brûlées (kCal)\" dataKey=\"calories\" fill=\"#E60000\" radius={[3,3,0,0]}/>\r\n                        </BarChart>\r\n                    </ResponsiveContainer>\r\n                </div>\r\n            </>\r\n        );\r\n    } else {\r\n        return (\r\n            <>\r\n                <h1>ERROR</h1>\r\n            </>\r\n        )\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}