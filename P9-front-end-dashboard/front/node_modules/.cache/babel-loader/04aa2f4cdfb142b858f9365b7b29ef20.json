{"ast":null,"code":"var _jsxFileName = \"/mnt/c/wamp64/www/REACT/analytics/P9-front-end-dashboard/front/src/components/graph/barChart/ActivityGraph.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport { getDataWeightById } from \"../../../services/API/user\"; // css \n\nimport style from './activityGraph.module.css';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CustomTooltip = _ref => {\n  let {\n    active,\n    payload\n  } = _ref;\n\n  if (active && payload && payload.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.customTooltip,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: style.kilogram,\n        children: `${payload[0].value}kg`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: style.calories,\n        children: `${payload[1].value}Kcal`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this);\n  }\n\n  return null;\n};\n\n_c = CustomTooltip;\n\nconst renderLegend = (value, entry) => {\n  const {\n    color\n  } = entry;\n\n  if (value === \"Poids (kg)\") {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: style.kiloLegend,\n      style: {\n        color\n      },\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: style.caloLegend,\n    style: {\n      color\n    },\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 12\n  }, this);\n};\n\nexport const ActivityGraph = _ref2 => {\n  _s();\n\n  let {\n    id\n  } = _ref2;\n  const [data, setData] = useState();\n  const XAxisFunction = useCallback(name => String(Number(name) + 1), []);\n  useEffect(() => {\n    if (id) {\n      getDataWeightById(id).then(result => {\n        setData(result.data);\n      }).catch(() => console.error('APPEL API ERROR'));\n    }\n  }, [id]);\n\n  if (data) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.containerGraph,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: style.title,\n          children: \"Activit\\xE9 quotidienne\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(BarChart, {\n          width: 777,\n          height: 273,\n          data: data.sessions,\n          margin: {\n            top: 65,\n            right: 25,\n            left: 43,\n            bottom: 23\n          },\n          barSize: 7,\n          barCategoryGap: 26,\n          barGap: 8,\n          children: [/*#__PURE__*/_jsxDEV(XAxis, {\n            tickFormatter: XAxisFunction,\n            tickLine: false,\n            tickMargin: 16,\n            padding: {\n              left: -50\n            },\n            axisLine: false,\n            scale: \"auto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            yAxisId: 0,\n            dataKey: \"kilogram\",\n            tickCount: 3,\n            tickLine: false,\n            axisLine: false,\n            orientation: \"right\",\n            tickMargin: 45,\n            type: \"number\",\n            domain: ['dataMin-1', 'dataMax + 2']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            yAxisId: 1,\n            dataKey: \"calories\",\n            type: \"number\",\n            domain: [0, 'dataMax'],\n            hide: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 38\n            }, this),\n            wrapperClassName: \"tooltip\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {\n            className: style.legend,\n            align: \"right\",\n            verticalAlign: \"top\",\n            iconSize: 8,\n            iconType: \"circle\",\n            wrapperStyle: {\n              top: '24px',\n              lineHeight: '24px'\n            },\n            formatter: renderLegend\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\",\n            vertical: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            yAxisId: 0,\n            name: \"Poids (kg)\",\n            dataKey: \"kilogram\",\n            fill: \"#282D30\",\n            radius: [3, 3, 0, 0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            yAxisId: 1,\n            name: \"Calories br\\xFBl\\xE9es (kCal)\",\n            dataKey: \"calories\",\n            fill: \"#E60000\",\n            radius: [3, 3, 0, 0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ERROR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n};\n\n_s(ActivityGraph, \"z6QtJdIlf2AeiVHBAaRKHguAGBo=\");\n\n_c2 = ActivityGraph;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CustomTooltip\");\n$RefreshReg$(_c2, \"ActivityGraph\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","getDataWeightById","style","CustomTooltip","active","payload","length","customTooltip","kilogram","value","calories","renderLegend","entry","color","kiloLegend","caloLegend","ActivityGraph","id","data","setData","XAxisFunction","name","String","Number","then","result","catch","console","error","containerGraph","title","sessions","top","right","left","bottom","legend","lineHeight"],"sources":["/mnt/c/wamp64/www/REACT/analytics/P9-front-end-dashboard/front/src/components/graph/barChart/ActivityGraph.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\r\n\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\nimport { getDataWeightById } from \"../../../services/API/user\";\r\n\r\n// css \r\nimport style from './activityGraph.module.css';\r\nimport './style.css'\r\n\r\ninterface Props {\r\n    id: string,\r\n}\r\n\r\nconst CustomTooltip = ({ active, payload }: any) => {\r\n    if (active && payload && payload.length) {\r\n        return (\r\n            <div className={style.customTooltip}>\r\n                <p className={style.kilogram}>{`${payload[0].value}kg`}</p>\r\n                <p className={style.calories}>{`${payload[1].value}Kcal`}</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return null;\r\n};\r\n\r\nconst renderLegend = (value: string, entry: any) => {\r\n    const { color } = entry;\r\n\r\n    if (value === \"Poids (kg)\") {\r\n        return <span className={style.kiloLegend} style={{ color }}>{value}</span>\r\n    }\r\n    return <span className={style.caloLegend} style={{ color }}>{value}</span>;\r\n};\r\n\r\nexport const ActivityGraph: React.FC<Props> = ({ id }) => {\r\n    const [data, setData] = useState<IUserActivity>();\r\n\r\n    const XAxisFunction = useCallback((name: string) => String(Number(name) + 1), [])\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            getDataWeightById(id).then((result) => {\r\n                setData(result.data);\r\n            }).catch(() => console.error('APPEL API ERROR'));\r\n        }\r\n    }, [id])\r\n    if (data) {\r\n        return (\r\n            <>\r\n                <div className={style.containerGraph}>\r\n                    <p className={style.title}>Activit√© quotidienne</p>\r\n                    <BarChart\r\n                        width={777}\r\n                        height={273}\r\n                        data={data.sessions}\r\n                        margin={{\r\n                            top: 65,\r\n                            right: 25,\r\n                            left: 43,\r\n                            bottom: 23, \r\n                        }}\r\n                        barSize={7}\r\n                        barCategoryGap={26}\r\n                        barGap={8}\r\n\r\n                    >\r\n                        <XAxis\r\n                            tickFormatter={XAxisFunction}\r\n                            tickLine={false}\r\n                            tickMargin={16}\r\n                            padding={{\r\n                                left: -50,\r\n                            }\r\n                            }\r\n                            axisLine={false}\r\n                            scale=\"auto\"\r\n\r\n                        />\r\n                        <YAxis\r\n                            yAxisId={0}\r\n                            dataKey=\"kilogram\"\r\n                            tickCount={3}\r\n                            tickLine={false}\r\n                            axisLine={false}\r\n                            orientation=\"right\"\r\n                            tickMargin={45}\r\n                            type=\"number\"\r\n                            domain={['dataMin-1', 'dataMax + 2']}\r\n                        />\r\n                        <YAxis\r\n                            yAxisId={1}\r\n                            dataKey=\"calories\"\r\n                            type=\"number\"\r\n                            domain={[0, 'dataMax']}\r\n                            hide={true}\r\n                        />\r\n                        <Tooltip\r\n                            content={<CustomTooltip />}\r\n                            wrapperClassName=\"tooltip\"\r\n                        />\r\n                        <Legend\r\n                            className={style.legend}\r\n                            align=\"right\"\r\n                            verticalAlign=\"top\"\r\n                            iconSize={8}\r\n                            iconType=\"circle\"\r\n                            wrapperStyle={{\r\n                                top: '24px',\r\n                                lineHeight: '24px'\r\n                            }}\r\n                            formatter={renderLegend}\r\n\r\n                        />\r\n                        <CartesianGrid\r\n                            strokeDasharray=\"3 3\"\r\n                            vertical={false}\r\n                        />\r\n                        <Bar yAxisId={0} name=\"Poids (kg)\" dataKey=\"kilogram\" fill=\"#282D30\" radius={[3, 3, 0, 0]} />\r\n                        <Bar yAxisId={1} name=\"Calories br√ªl√©es (kCal)\" dataKey=\"calories\" fill=\"#E60000\" radius={[3, 3, 0, 0]} />\r\n                    </BarChart>\r\n                </div>\r\n            </>\r\n        );\r\n    } else {\r\n        return (\r\n            <>\r\n                <h1>ERROR</h1>\r\n            </>\r\n        )\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}