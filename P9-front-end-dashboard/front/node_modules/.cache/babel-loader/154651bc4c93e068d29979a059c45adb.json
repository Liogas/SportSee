{"ast":null,"code":"var _jsxFileName = \"/mnt/c/wamp64/www/REACT/analytics/P9-front-end-dashboard/front/src/components/graph/barChart/ActivityGraph.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport { getDataWeightById } from \"../../../services/API/user\"; // css \n\nimport style from './activityGraph.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CustomTooltip = _ref => {\n  let {\n    active,\n    payload\n  } = _ref;\n\n  if (active && payload && payload.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"customTooltip\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"kilogram\",\n        children: \"test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"calories\",\n        children: \"test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this);\n  }\n\n  return null;\n};\n\n_c = CustomTooltip;\nexport const ActivityGraph = _ref2 => {\n  _s();\n\n  let {\n    id\n  } = _ref2;\n  const [data, setData] = useState();\n  useEffect(() => {\n    if (id) {\n      getDataWeightById(id).then(result => {\n        setData(result.data);\n      }).catch(() => console.error('APPEL API ERROR'));\n    }\n  }, [id]);\n\n  if (data) {\n    let dataGraph = [];\n\n    for (let i = 0; i < data.sessions.length; i++) {\n      dataGraph.push(data.sessions[i]);\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.containerGraph,\n        children: /*#__PURE__*/_jsxDEV(BarChart, {\n          width: 835,\n          height: 320,\n          data: dataGraph,\n          barGap: 8,\n          barSize: 7,\n          margin: {\n            top: 24,\n            right: 29.5,\n            bottom: 23,\n            left: 32\n          },\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\",\n            vertical: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: 0,\n            tickLine: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            orientation: \"right\",\n            tickLine: false,\n            axisLine: false,\n            tickCount: 3,\n            tickMargin: 45\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {\n            align: \"right\",\n            verticalAlign: \"top\",\n            iconSize: 8,\n            iconType: \"circle\",\n            className: style.legend,\n            height: 84\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"kilogram\",\n            fill: \"#282D30\",\n            name: \"Poids (kg)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"calories\",\n            fill: \"#E60000\",\n            name: \"Calories br\\xFBl\\xE9es (kCal)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ERROR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n};\n\n_s(ActivityGraph, \"WZ2PO9A64oHRexE1CE+yX3ebuoA=\");\n\n_c2 = ActivityGraph;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CustomTooltip\");\n$RefreshReg$(_c2, \"ActivityGraph\");","map":{"version":3,"names":["React","useEffect","useState","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","getDataWeightById","style","CustomTooltip","active","payload","length","ActivityGraph","id","data","setData","then","result","catch","console","error","dataGraph","i","sessions","push","containerGraph","top","right","bottom","left","legend"],"sources":["/mnt/c/wamp64/www/REACT/analytics/P9-front-end-dashboard/front/src/components/graph/barChart/ActivityGraph.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, Label } from 'recharts';\r\nimport { getDataWeightById } from \"../../../services/API/user\";\r\n\r\n// css \r\nimport style from './activityGraph.module.css';\r\n\r\ninterface Props {\r\n    id: string,\r\n}\r\n\r\nconst CustomTooltip = ({ active, payload }: any) => {\r\n    if (active && payload && payload.length) {\r\n      return (\r\n        <div className=\"customTooltip\">\r\n          <p className=\"kilogram\">test</p>\r\n          <p className=\"calories\">test</p>\r\n        </div>\r\n      );\r\n    }\r\n  \r\n    return null;\r\n  };\r\n\r\nexport const ActivityGraph: React.FC<Props> = ({ id }) => {\r\n    const [data, setData] = useState<IUserActivity>();\r\n    useEffect(() => {\r\n        if (id) {\r\n            getDataWeightById(id).then((result) => {\r\n                setData(result.data);\r\n            }).catch(() => console.error('APPEL API ERROR'));\r\n        }\r\n    }, [id])\r\n    if (data) {\r\n        let dataGraph = [];\r\n        for (let i = 0; i < data.sessions.length; i++) { dataGraph.push(data.sessions[i]) }\r\n        return (\r\n            <>\r\n                <div className={style.containerGraph}>\r\n                    <BarChart\r\n                        width={835}\r\n                        height={320}\r\n                        data={dataGraph}\r\n                        barGap={8}\r\n                        barSize={7}\r\n                        margin={{top: 24, right: 29.5, bottom: 23, left: 32}}\r\n                    >\r\n                        <CartesianGrid\r\n                            strokeDasharray=\"3 3\"\r\n                            vertical={false}\r\n                        />\r\n                        <XAxis\r\n                            dataKey={0}\r\n                            tickLine={false}\r\n                        />\r\n                        <YAxis\r\n                            orientation=\"right\"\r\n                            tickLine={false}\r\n                            axisLine={false}\r\n                            tickCount={3}\r\n                            tickMargin={45}\r\n                        />\r\n                        <Tooltip content={<CustomTooltip />} />\r\n                        <Legend\r\n                            align=\"right\"\r\n                            verticalAlign=\"top\"\r\n                            iconSize={8}\r\n                            iconType=\"circle\"\r\n                            className={style.legend}\r\n                            height={84}\r\n                        />\r\n                        <Bar \r\n                            dataKey=\"kilogram\" \r\n                            fill=\"#282D30\" \r\n                            name=\"Poids (kg)\" \r\n                        />\r\n                        <Bar \r\n                            dataKey=\"calories\" \r\n                            fill=\"#E60000\" \r\n                            name=\"Calories brûlées (kCal)\" \r\n                        />\r\n                    </BarChart>\r\n                </div>\r\n            </>\r\n        );\r\n    } else {\r\n        return (\r\n            <>\r\n                <h1>ERROR</h1>\r\n            </>\r\n        )\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}