{"ast":null,"code":"var _jsxFileName = \"/mnt/c/wamp64/www/REACT/analytics/P9-front-end-dashboard/front/src/components/graph/performanceGraph/PerformanceGraph.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { Radar, RadarChart, PolarGrid, PolarAngleAxis, PolarRadiusAxis } from 'recharts';\nimport { getDataPerformanceById } from \"../../../services/API/user\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const PerformanceGraph = _ref => {\n  _s();\n\n  let {\n    id\n  } = _ref;\n  const [data, setData] = useState();\n  const widthContainer = 258;\n  const getXAxis = useCallback(value => {\n    console.log(value);\n\n    switch (value) {\n      case 1:\n        return 'Cardio';\n\n      case 2:\n        return 'Energie';\n\n      case 3:\n        return 'Endurance';\n\n      case 4:\n        return 'Force';\n\n      case 5:\n        return 'Vitesse';\n\n      case 6:\n        return 'Intensité';\n    }\n\n    return 'Error';\n  }, []);\n  useEffect(() => {\n    if (id) {\n      getDataPerformanceById(id).then(result => {\n        setData(result.data);\n      }).catch(() => console.error('API ERROR'));\n    }\n  }, [id]);\n\n  if (data) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(RadarChart, {\n        outerRadius: 90,\n        width: 730,\n        height: 250,\n        data: data.data,\n        children: [/*#__PURE__*/_jsxDEV(PolarGrid, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(PolarAngleAxis, {\n          tickFormatter: getXAxis,\n          dataKey: \"kind\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(PolarRadiusAxis, {\n          angle: 30,\n          domain: [0, 150]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Radar, {\n          name: \"Mike\",\n          dataKey: \"value\",\n          stroke: \"#8884d8\",\n          fill: \"#8884d8\",\n          fillOpacity: 0.7\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ERROR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n};\n\n_s(PerformanceGraph, \"r5zkg1Uxp5UGk5EDOlREVqnIqWA=\");\n\n_c = PerformanceGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"PerformanceGraph\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","Radar","RadarChart","PolarGrid","PolarAngleAxis","PolarRadiusAxis","getDataPerformanceById","PerformanceGraph","id","data","setData","widthContainer","getXAxis","value","console","log","then","result","catch","error"],"sources":["/mnt/c/wamp64/www/REACT/analytics/P9-front-end-dashboard/front/src/components/graph/performanceGraph/PerformanceGraph.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { Radar, RadarChart, PolarGrid, PolarAngleAxis, PolarRadiusAxis } from 'recharts';\r\n\r\nimport { getDataPerformanceById } from \"../../../services/API/user\";\r\n\r\nimport style from './performanceGraph.module.css';\r\n\r\ninterface Props {\r\n    id: string,\r\n}\r\n\r\nexport const PerformanceGraph: React.FC<Props> = ({ id }) => {\r\n    const [data, setData] = useState<IUserPerformance>();\r\n\r\n    const widthContainer = 258;\r\n\r\n    const getXAxis = useCallback((value: number) => {\r\n        console.log(value);\r\n        switch (value) {\r\n            case 1: return 'Cardio';\r\n            case 2: return 'Energie';\r\n            case 3: return 'Endurance';\r\n            case 4: return 'Force';\r\n            case 5: return 'Vitesse';\r\n            case 6: return 'Intensité';\r\n        }\r\n        return 'Error';\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            getDataPerformanceById(id).then((result) => {\r\n                setData(result.data);\r\n            }).catch(() => console.error('API ERROR'));\r\n        }\r\n    }, [id])\r\n\r\n    if (data) {\r\n        return (\r\n            <>\r\n                <RadarChart\r\n                    outerRadius={90}\r\n                    width={730}\r\n                    height={250}\r\n                    data={data.data}\r\n                >\r\n                    <PolarGrid \r\n                    />\r\n                    <PolarAngleAxis\r\n                        tickFormatter={getXAxis}\r\n                        dataKey=\"kind\"\r\n                    />\r\n                    <PolarRadiusAxis\r\n                        angle={30}\r\n                        domain={[0, 150]}\r\n                    />\r\n                    <Radar\r\n                        name=\"Mike\"\r\n                        dataKey=\"value\"\r\n                        stroke=\"#8884d8\"\r\n                        fill=\"#8884d8\"\r\n                        fillOpacity={0.7}\r\n                    />\r\n                </RadarChart>\r\n            </>\r\n        )\r\n    } else {\r\n        return (\r\n            <>\r\n                <h1>ERROR</h1>\r\n            </>\r\n        )\r\n    }\r\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,QAAxC,QAAwD,OAAxD;AACA,SAASC,KAAT,EAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,cAAvC,EAAuDC,eAAvD,QAA8E,UAA9E;AAEA,SAASC,sBAAT,QAAuC,4BAAvC;;;AAQA,OAAO,MAAMC,gBAAiC,GAAG,QAAY;EAAA;;EAAA,IAAX;IAAEC;EAAF,CAAW;EACzD,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,EAAhC;EAEA,MAAMW,cAAc,GAAG,GAAvB;EAEA,MAAMC,QAAQ,GAAGd,WAAW,CAAEe,KAAD,IAAmB;IAC5CC,OAAO,CAACC,GAAR,CAAYF,KAAZ;;IACA,QAAQA,KAAR;MACI,KAAK,CAAL;QAAQ,OAAO,QAAP;;MACR,KAAK,CAAL;QAAQ,OAAO,SAAP;;MACR,KAAK,CAAL;QAAQ,OAAO,WAAP;;MACR,KAAK,CAAL;QAAQ,OAAO,OAAP;;MACR,KAAK,CAAL;QAAQ,OAAO,SAAP;;MACR,KAAK,CAAL;QAAQ,OAAO,WAAP;IANZ;;IAQA,OAAO,OAAP;EACH,CAX2B,EAWzB,EAXyB,CAA5B;EAaAd,SAAS,CAAC,MAAM;IACZ,IAAIS,EAAJ,EAAQ;MACJF,sBAAsB,CAACE,EAAD,CAAtB,CAA2BQ,IAA3B,CAAiCC,MAAD,IAAY;QACxCP,OAAO,CAACO,MAAM,CAACR,IAAR,CAAP;MACH,CAFD,EAEGS,KAFH,CAES,MAAMJ,OAAO,CAACK,KAAR,CAAc,WAAd,CAFf;IAGH;EACJ,CANQ,EAMN,CAACX,EAAD,CANM,CAAT;;EAQA,IAAIC,IAAJ,EAAU;IACN,oBACI;MAAA,uBACI,QAAC,UAAD;QACI,WAAW,EAAE,EADjB;QAEI,KAAK,EAAE,GAFX;QAGI,MAAM,EAAE,GAHZ;QAII,IAAI,EAAEA,IAAI,CAACA,IAJf;QAAA,wBAMI,QAAC,SAAD;UAAA;UAAA;UAAA;QAAA,QANJ,eAQI,QAAC,cAAD;UACI,aAAa,EAAEG,QADnB;UAEI,OAAO,EAAC;QAFZ;UAAA;UAAA;UAAA;QAAA,QARJ,eAYI,QAAC,eAAD;UACI,KAAK,EAAE,EADX;UAEI,MAAM,EAAE,CAAC,CAAD,EAAI,GAAJ;QAFZ;UAAA;UAAA;UAAA;QAAA,QAZJ,eAgBI,QAAC,KAAD;UACI,IAAI,EAAC,MADT;UAEI,OAAO,EAAC,OAFZ;UAGI,MAAM,EAAC,SAHX;UAII,IAAI,EAAC,SAJT;UAKI,WAAW,EAAE;QALjB;UAAA;UAAA;UAAA;QAAA,QAhBJ;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ,iBADJ;EA4BH,CA7BD,MA6BO;IACH,oBACI;MAAA,uBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ,iBADJ;EAKH;AACJ,CA9DM;;GAAML,gB;;KAAAA,gB"},"metadata":{},"sourceType":"module"}